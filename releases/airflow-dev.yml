apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airflow
  namespace: dev
spec:
  interval: 30s
  releaseName: airflow-dev
  chart:
    spec:
      chart: airflow
      version: "1.7.0"
      sourceRef:
        kind: HelmRepository
        name: apache-airflow
        namespace: flux-system
  values:
    defaultAirflowTag: "2.5.1"
    airflowVersion: "2.5.1"
    fernetKey: "zTxhk7FuGqQVPZVoukLn5bGWOrgHzhQnBnaqAItcZGI="
    env:
      - name: "AIRFLOW__CORE__LOAD_EXAMPLES"
        value: "False"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE"
        value: "dev"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_REPOSITORY"
        value: "apache/airflow"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_TAG"
        value: "slim-2.5.1-python3.8"
    executor: "KubernetesExecutor"
    createUserJob:
      useHelmHooks: false
    migrateDatabaseJob:
      useHelmHooks: false
    dags:
      persistence: 
        enabled: False
      gitSync: 
        enabled: True
        repo: git@github.com:hichemBA67/airflow-private-dags.git
        branch: master
        maxFailures: 0
        subPath: ""
        wait: 60
        sshKeySecret: airflow-ssh-secret
      extraSecrets:
        airflow-ssh-secret:
          data: |
            gitSshKey: 'LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUNGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFnRUF2VHJCbm84MmJESnk4Ri96ZEd6YnRCQXZUMDJZSEFob01wKzRTSTljaXJRNytDbU9NUEN2CnRXaTFxU1YzTEpaRUViME1SQ0xneWd4MkJWRDcyekRtWDNoRWJMRlFBdDBGTVRLSmo2d0tYSDRPV3J4WWxZZko2dlhwRlgKT3lqT3hKWjd6Y1dIWGlNMEtSV2JNb1dlTWtTTE1WNTF3ZHF1U0xIT0xGWHI3SENhaFJacnJaKzFOYURnc2VlOHlJNzhHZQpTY213NmVLeFhGaGlMZnAwQjRKeGwzV3d1VjFnZmFiRXVjVEZsYUhXN0hJVlh2Smg4ZVd6dFVJUFhXeGM2Yy9qSm05RzlSCk85ZW1MczRCOEJGZ09MZHJrLzlreTAydVljRXg3elliR3Y4a1cvSDIyekIzTUh1dHZsZzkzQmNXcHVQRVVhWG5Pa2FhVjIKVEUxWlpMMFdheGFLcC8xOCtsdDhQZm5aSWhrcFNQMnliOVFYSHFDMkw1VG1PUEF1ZTB0cm1uRkhmaUdVSlYxVFpnWXhiUApxOVI1RkhOUDFVcVNjREVjTTAzTmMrUmFnQ3JLME9LVWpVNDE0N0ltNkU5S2NKNGs0SVJxZUFtS2VzcWdwU0Y4QmxQcS82CmJWUWFGWUdacWpHRGNDSWlYOFlVMHZKYzZnb1lWSXp0V3JONk9YeGFZc0JUVnFadXJzUXBIQTZmL1ZMZ3cxRStncWtFMXUKK0pZdEN2Nk9TU09BUmhvRVoyNkp3MmNYdVc4K2ljWHdiTFZOSkYxTEpYekl1U0pEcGIzOWNNaitDU1VOZ2RWeWtzRXlGWQpQUkErcDFEL1I5RWpqOVJlUVl4bjIyQzlGeDExbXR0aXJVYUFxNDZwQW5mNTJwMDJkdUdCS2FJbi9CajhuV2xMbFpENEJNCjhBQUFkZ0lFZkx4Q0JIeThRQUFBQUhjM05vTFhKellRQUFBZ0VBdlRyQm5vODJiREp5OEYvemRHemJ0QkF2VDAyWUhBaG8KTXArNFNJOWNpclE3K0NtT01QQ3Z0V2kxcVNWM0xKWkVFYjBNUkNMZ3lneDJCVkQ3MnpEbVgzaEViTEZRQXQwRk1US0pqNgp3S1hINE9XcnhZbFlmSjZ2WHBGWE95ak94Slo3emNXSFhpTTBLUldiTW9XZU1rU0xNVjUxd2RxdVNMSE9MRlhyN0hDYWhSClpyclorMU5hRGdzZWU4eUk3OEdlU2NtdzZlS3hYRmhpTGZwMEI0SnhsM1d3dVYxZ2ZhYkV1Y1RGbGFIVzdISVZYdkpoOGUKV3p0VUlQWFd4YzZjL2pKbTlHOVJPOWVtTHM0QjhCRmdPTGRyay85a3kwMnVZY0V4N3pZYkd2OGtXL0gyMnpCM01IdXR2bApnOTNCY1dwdVBFVWFYbk9rYWFWMlRFMVpaTDBXYXhhS3AvMTgrbHQ4UGZuWkloa3BTUDJ5YjlRWEhxQzJMNVRtT1BBdWUwCnRybW5GSGZpR1VKVjFUWmdZeGJQcTlSNUZITlAxVXFTY0RFY00wM05jK1JhZ0NySzBPS1VqVTQxNDdJbTZFOUtjSjRrNEkKUnFlQW1LZXNxZ3BTRjhCbFBxLzZiVlFhRllHWnFqR0RjQ0lpWDhZVTB2SmM2Z29ZVkl6dFdyTjZPWHhhWXNCVFZxWnVycwpRcEhBNmYvVkxndzFFK2dxa0UxdStKWXRDdjZPU1NPQVJob0VaMjZKdzJjWHVXOCtpY1h3YkxWTkpGMUxKWHpJdVNKRHBiCjM5Y01qK0NTVU5nZFZ5a3NFeUZZUFJBK3AxRC9SOUVqajlSZVFZeG4yMkM5RngxMW10dGlyVWFBcTQ2cEFuZjUycDAyZHUKR0JLYUluL0JqOG5XbExsWkQ0Qk04QUFBQURBUUFCQUFBQ0FBaXdoWXFqOWZKVEFMODBFTWgwWlVSb0I5d2k2b3pEQUJIdgpEclhhUzN3ZEdiSGtLcURwdEkvbWpvMEZhT3NWdld0NUhIS1dqVzhKMG5PZEMrdTlXNTdmdFhpdVRjZkw0WHlvWHZQSGlUClJGSDZDZ0RJdFZVSHJuTHZ4cXN6VFFkdkI2Rmo1RHI0NytEQkdyN2ZydXVOQlQxUG9xV3p4cFFWQWl3OEI5ajBOTXhPd3MKUVcxT254Q05CeW5WTXlhYlpBcnNaYURmNVpnaGdPU3VueHhuSzVNeWR0cVVSS1dRZm5FdmJZbFpCTGNYNkE1VG9CYk5IdwpzQVRSZFRyaEtZbHN4QmlPY2hNRzdKMHluWmtxR3hxUHBiT0dvMWpJcU96WlE5TkJ6MDNXa0pOZVVhRXdJUkVMWk9lY1FyCjcwR25pd2RlZnY3K1hYcnllN08yUzVnYUxNaks2V1BrTENEK29ncWFIR0xMcmV3aG1WSUpUSXJhZkVPc2E3M2N3cjRyL0YKMEV1bFFPVGU5OWpQU3FETUhKc0xpMzJ3aXIxNHduZFNPR1JqMC80VXUyamZZcjB3eC9BYldoV3gxQlk0aDNuNm44b1hMbQp3SFI5aU1xR3kvQUhtcmlYSEtzNEV1ajhJNDBYZlNoYVN5dzBZRC9ua1RoQ1hyRjlEbG5rV20xZ1ErUlBSSFRQeDIwUDQxCjBFbTc0SlNpUUZhaS84bHV5NkhmU3QwWVg5MERTemFiVlA4SWk2eHkxYTU1TEZQTER3a3RGc2FMYVBVMkJTT0N2LzltT2kKVXQ1ekVBZzhodkZpRDUzWlg1TVJzQlQwd1ozYU9oNGZxalh5aCtsakZVaXhsSlhiWEtlWTJDMnpyc0h3L2Ryd3dIYUZFRQpWbkZZNFkxdnV4UVJHd29VTlZBQUFCQVFEZDd5ZjYyZWF1dUp2aHJOQlRlWHBkclAvSUlHWUFrZ25vS1ZoUnJJMHZ2SXNQCjJrUi8zbDV5ZlE1aVNkdGlsOVRST2lGM1N1YzB6dVJ5c2FmajBWMjJ3YWJRUVoyd0xsdit2OXdyNWMvYmNKWUNWbHF1WEEKa2Rob3ErVC9EaDBlZGpkME9RcU9hQ1NrUWI0QlVJcnV6RWNyMExBaVNRdGtiOUo0MzlSSnVKSDJITEphbGFaVnY1UzlHOQpuYWUyRzh1MlNTcmZBK1MwbTFqOENkdjBvUXhpd1NqMzNHd09OeE5qc2VhZ25sNHlOUmIreDZFWTI1T0U1eGVlelFBeWtzCjBDdFJlWmYrT29YN0tRbEVNZGJZVjY0c1Z0bFJzN0lkaWRDWGpydVpnb1ppOXBMUUNjS0RvNHdraHhXcis1ZlMzM3JiaFYKNi90a3RoVE9aaVc0Z3VhTkFBQUJBUURmQmJUVUFtV2JaUmIvY0diQnBGNjNZRmJ4bUFxL3JrNWhvYUpadXpET2FuWmdBbwptY1pzSFlEOVk2VEd2VTl2SHpOS2NpTGZCaGh4NnhRb2dSaWlDZFFOMUJNVEZwUEw2Y2xZNG9MUUR2YlR6Nmx1NjJ4NHM2ClZwSlFsODd6eWYvUkY2UytCbjBTQUN1dktMb3ZBbnpaTUFRSERWeE84Z2xzV3g5azFVNjliaWZVNVJxNzFYcjgzTjFNMUoKQ29LMTY4RDArNldRWlNsWWU3blZ1QnZkUDFURHFQVXNTOHFZSlBrL0w2S04zdlRmNFArTi8wTzFNUmZFK2FxSlFzdFE1WgpyRXhPUkNwOVQ5SGMyMGNLbFhNMHJUaDFVa1o2V3NEbEs4amRaTnJnc1VYY3RyREltTURIei84TzE2d0pWemY5a0hrUlFMCjJhRThjQ20vTCtjY3hyQUFBQkFRRFpOZHRzZ2V6RTc1NjhPbmNIcXdvMjRyeXFUaEZlQmJKeEhkd3JlVFZxWDFsUFMwU3UKaE9UOU5XdzlQNzB2bVUwRStucU9uaHYvZy9Kd2crcUVhY3AyTFpFc04zTDB6TjhnUW5oZm9DUWE5SmV3emxEU0J1aHMyRApGZFpNOVRCMWhuYnh4bGFMSnJOem5HSy9Ca2ppRWxRS2RMZ2UwZlpzaXo5VXNHMHJSVXZYc3NBNW1DWC9lOU9WNXlIQzR2ClJBVEx4eGJMakJvRkRpaHN0ck1LYm5ERUVKMVZxOEtlVzErSTBwWmN5RXhKZkR1N1d6VDJiZE5ob1VZM0g2aXFLK012cXIKN0g3Z1hXM0RoV01CeFNOS2RYOGJjKzVmaEMrYlhzM3hxNDRMMUtleVBLTDdZWitaQmRsYUhTTkc4VzY5ckVrY0xkK1k5YgpwTWladnFkUnFzSXRBQUFBSldWak1pMTFjMlZ5UUdsd0xURTNNaTB6TVMwM05pMDROQzVsWXpJdWFXNTBaWEp1WVd3QkFnCk1FQlE9PQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K'
    