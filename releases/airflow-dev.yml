apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airflow
  namespace: dev
spec:
  interval: 30s
  releaseName: airflow-dev
  chart:
    spec:
      chart: airflow
      version: "1.7.0"
      sourceRef:
        kind: HelmRepository
        name: apache-airflow
        namespace: flux-system
  values:
    defaultAirflowTag: "2.5.1"
    airflowVersion: "2.5.1"
    fernetKey: "zTxhk7FuGqQVPZVoukLn5bGWOrgHzhQnBnaqAItcZGI="
    env:
      - name: "AIRFLOW__CORE__LOAD_EXAMPLES"
        value: "False"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE"
        value: "dev"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_REPOSITORY"
        value: "apache/airflow"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_TAG"
        value: "slim-2.5.1-python3.8"
    executor: "KubernetesExecutor"
    createUserJob:
      useHelmHooks: false
    migrateDatabaseJob:
      useHelmHooks: false
    dags:
      persistence: 
        enabled: False
      gitSync: 
        enabled: True
        repo: git@github.com:hichemBA67/airflow-private-dags.git
        branch: main
        maxFailures: 0
        subPath: ""
        wait: 60
        sshKeySecret: airflow-ssh-secret
    extraSecrets:
      airflow-ssh-secret:
        data: |
          gitSshKey: 'LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUNGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFnRUF6UzFwcmhMMlM0K0xTcURvcDRlNkFhRXh1Ni8wMDQ4RCtGNjF4NXA5TEhZanpYWlpyekphCk5VMkNlelFkejdIZExtRmdlVDdDT0tVWndmYU1PWEhkendsVVptcVZGTEtXMXFoR09tS1Z0bnNjbDkzVXZGNWNuOWVSWEQKSkZ1Sm1IbDZBd1BmVHRMU2ZRRGV2b2VJOXZTME9CVVVnVmtUek1rWGlQNk9NMTFJSDF1Z2M3UGlCeklidElkWE82aHRObQp1NWtra2pPUkN6VDJjMXZMNHZUbnBRQTFRR0pJYm94TWpXb3VLaFRSNFVsUE44OWxZZ1o4SEJlR2s0R1BCR2RnUXZQN3F4CitYSGNjMVplWHFoK0J5Q2VjbndJUWowRXBZZHByeXZWVHN6UERUZThGOW5iY2d3ZVl2ZUVYdjZEOC9USER1NEc4RlVXNk0KUjJDTVlsVEhXaURBL2doWjljbnJjRzlsdTduZmZQc1FWNkdqSW5wVVE1SjNKblJaejdJY01tSURsTlZWelVJNmN3R2RraApYTzRIWFlkNmluQmt4aXpILzUwMDJtMi9SZ1dENzZZRTk2WkZsWjRQK0cxT3YvSWYzUExiZ3Q5SnptNUlOYjh4WXYzSVVlCnUybWg5YzJyRC9ZY1l3MGptaGNQMzFadEx5UWZmYTVmUmt0Y1l6NElNWTlYK3o1V1dNSWNmUlBWZ1FvZ2NLTWZnVFhBaGQKbW9sQ3lRRENKdzlaczl0RHVwYkJyR1M0c1cxbVNEakxUODdUaHczdXZ1ZlRoYVhoN3pUYnAxWkJQQXk4bDlhVXJJNUQ2dApEVWlCK09xTjNKc2tkbUJtaHhEK0p1T3R2MVp3VjhNOE9jWi8vSEFxanRZT1RhWEVKMEhDSXNDSUY0cktqeGIwWTBxMTRvCmNBQUFkd1g3K2l4Risvb3NRQUFBQUhjM05vTFhKellRQUFBZ0VBelMxcHJoTDJTNCtMU3FEb3A0ZTZBYUV4dTYvMDA0OEQKK0Y2MXg1cDlMSFlqelhaWnJ6SmFOVTJDZXpRZHo3SGRMbUZnZVQ3Q09LVVp3ZmFNT1hIZHp3bFVabXFWRkxLVzFxaEdPbQpLVnRuc2NsOTNVdkY1Y245ZVJYREpGdUptSGw2QXdQZlR0TFNmUURldm9lSTl2UzBPQlVVZ1ZrVHpNa1hpUDZPTTExSUgxCnVnYzdQaUJ6SWJ0SWRYTzZodE5tdTVra2tqT1JDelQyYzF2TDR2VG5wUUExUUdKSWJveE1qV291S2hUUjRVbFBOODlsWWcKWjhIQmVHazRHUEJHZGdRdlA3cXgrWEhjYzFaZVhxaCtCeUNlY253SVFqMEVwWWRwcnl2VlRzelBEVGU4RjluYmNnd2VZdgplRVh2NkQ4L1RIRHU0RzhGVVc2TVIyQ01ZbFRIV2lEQS9naFo5Y25yY0c5bHU3bmZmUHNRVjZHaklucFVRNUozSm5SWno3CkljTW1JRGxOVlZ6VUk2Y3dHZGtoWE80SFhZZDZpbkJreGl6SC81MDAybTIvUmdXRDc2WUU5NlpGbFo0UCtHMU92L0lmM1AKTGJndDlKem01SU5iOHhZdjNJVWV1Mm1oOWMyckQvWWNZdzBqbWhjUDMxWnRMeVFmZmE1ZlJrdGNZejRJTVk5WCt6NVdXTQpJY2ZSUFZnUW9nY0tNZmdUWEFoZG1vbEN5UURDSnc5WnM5dER1cGJCckdTNHNXMW1TRGpMVDg3VGh3M3V2dWZUaGFYaDd6ClRicDFaQlBBeThsOWFVckk1RDZ0RFVpQitPcU4zSnNrZG1CbWh4RCtKdU90djFad1Y4TThPY1ovL0hBcWp0WU9UYVhFSjAKSENJc0NJRjRyS2p4YjBZMHExNG9jQUFBQURBUUFCQUFBQ0FCbVNWMkdDcTMrdlhFVG8yUlpJTEQ2WHdJTUw0dythKzN1eApFaWJXY2xOZ1JnWU5nZy83enBKbUhxVU1VY3JZK0NBWHN0WnBvL3M3V0lKOEgrM282eVFxbllKR05sNW1BN2F0TWxPRWhmClJBVThmNXRkSGtVTmI3SHZyR3FUbmdxSzJWSVc0WFlKZ0lKajRWOE50VnhTRTBRS0hJd2lkZjFIOHM3NEt2RHI1MWxCS2oKWkJiU0pJZEh1RGdyUEV3aGZPUlVxZUl1Mnh6eWRPVGJ4QVY5VUlHWURRc0JOTlhTVnBncGE2ZURBTVY3Ull4SEpQT2FxMAowMUFXalE5T292bUNmQUVOVzdFako3NllQUnEvRlRYK01zRkNCQ1Y5UlY3OENZZnpocHBUbkZxaFg2ZjVWd2hYeWxHN1Y1CndmVElMVE54djlQcEFsaXIxbi91NEpCQTBMZUp4K2I3UC8vT3ZIQUNEN3hPT3RQYXNOc29MRUNIUVkvVkZicVgwMUZaUEwKeU12ZTM0QU03RnlIQ3Mydk1WejRGbURXbFBMZXJVa3doY2c3ZVlpSCtLcFREdWMyRjlzWENicXd5aE5Da3ZaUEY0cTZoTQpxanZnMGptNGxPbFRFSWZyNnJtMW5yTTh0bC9MNTVFc0t6VWZiNlpxTzBGd1V1SHp0ancvbWs0QkdhOFZSVktjOVVMZXZRCnRKMVd1dkljLzE4dmk1dFZTdUx3bDR5YitmdUhyTzhOMDlHQzExRG8ybnBmQ2ZPVDhuUHJHck5MUHdoT1VmdGdvZEhCdHYKVFJLSCtTVEFLWFV5V2ZXOS84ZUVCcDNRTE5ZdWd0eHFiWFJlck5uOW1sdkdaSXNoUklKZi9uaUl4aHQvV1VqYXllUWM0NgpIcVZBRXMzV0dIVDZJM3hBMEJBQUFCQUFXemJQbERzMW9NK2FnRDZGdEJGenpka3dIVmk0Q2QzQUlYcVJZUHprSEZHdTVSCmxYc0tlL3RxMWx5RGVTZURETlc4YUJyKzNmVnZOaDd2bUpRNlgyUzJlM2FxVG5VbUJmQmV0Z25NZnZwQTc4OVBZOTFtOUgKUDlXTzBlRUw2SmhNamdYYXdzOW10anRwOE4xcm5tR1VpWDRWRlA2aE5VRG9FZE1QbU9YMmNWdDdHTzNyak0zWkhlSjM1bAp2cFBEV3lPem5VdC9DcTNEbS9wcUJKakcrSFhTdGcxNjV3Y2EwaGF4dGtjR3BYUkZnaERUcExnakZHZEgzODE4ZEsyY0RRCnc4dW1sODQrS2JvbUM0eUtDR1NXSU0zTFJoRVkzQmgraFlTMEN3WU9OUHNhZjlxZTlWb2pOWExJaDlHMFBNZDlqaERZd2QKSGp6T2VGbmNHZ3BDMXJBQUFBRUJBTjlrQlBITW5xbldQZ1p5aVdqaEZLdnA2anVCWlc4WlVndlNubjNzSzJISDR2Q0IzUwo1K3o4dlVHZVFPMkVwWGpLNms0WVpScElxM0dTbE9Nc1Zsa2tKNGtxaS8rQXlRU1B5MVlwaHpSUGxyK3NJb0NIaW9iRnNxCkRFV1NUYUtYQXMxNFZoeURzaE9kNWpOUGlHdFR2K0w5MWJwV1lpZmsrTTBoZVcxa2twOXRodzJnN1NMY3AxOWpTT016NGsKeGtqNCtCSW10RlltUkJJKzF0a2tsWmxWeGhBVzA5eVlwcGhxZ2hnQ0g4eThvLzlSQmhOTExPS25pMnc1TnpLY01QazYwcgppQ1h3a0Nib3pWUE1WYURPM2g1dVI2TmtDNXlYc1lON3gwZUZlNkhEdTNwajlIYzZSWEE4b3ltaVg0OGhXUU9aY2NhVk9HCkpSTzViaGRhajBlRGNBQUFFQkFPc2d4ZGJsd1BtV1hWVW1aY2ZlZjdTTXkyUmxLZ0RpZG5VcTcxZUhMaE0xeWtIS0dEL1QKaEtjUkpZeUU4dkErTHo5WE5mVjU3Ulk4T0QzNGVValE5TmtmVXFMaFpmaWE3WkZ1MDhVVHZQZm1Ib2czaWNoWDRheGIrMApHWGNJd2NaSHdrbHUrVTFjeE45a24zVWQxWmR4U1VQSE1xdnBUS1hvKy9MamhISHo1VTlNSEQyS0VlN3JDMFlGcTdoZ2JHCnNIRU0vRnMzUFd6RE45WTZDRGdkME5meUlYRzZ5WU96TUFHdm45QmlNbnY3SDNaWFp0elViSzQ5UHkzSUZaRlZOVW5pVjYKZ2VtNWM5WEI4YnQ4bGJTamxjVDZqOUFNb0VoM0hqNDJ0ZzR5WS9QaE96VEhDWDhIRU5vVWo3RjlWYjRkYWRFZExtT2FWaQpqMGRmR29nOElERUFBQUEyWldNeUxYVnpaWEpBYVhBdE1UY3lMVE14TFRBdE1qRXhMbVYxTFdObGJuUnlZV3d0TVM1amIyCjF3ZFhSbExtbHVkR1Z5Ym1Gc0FRSURCQVU9Ci0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo='
    